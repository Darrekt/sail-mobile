// Mocks generated by Mockito 5.0.15 from annotations
// in spark/test/widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:image_picker/image_picker.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:spark/models/SparkUser.dart' as _i5;
import 'package:spark/repositories/auth/auth_repository_firebase.dart' as _i3;
import 'package:spark/repositories/pictures/pictures_repository_firebase.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeUserCredential_0 extends _i1.Fake implements _i2.UserCredential {}

/// A class which mocks [FirebaseAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthRepository extends _i1.Mock
    implements _i3.FirebaseAuthRepository {
  MockFirebaseAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(Invocation.method(#isAuthenticated, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<void> refreshUser() =>
      (super.noSuchMethod(Invocation.method(#refreshUser, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Stream<_i5.SparkUser> getUser() => (super.noSuchMethod(
      Invocation.method(#getUser, []),
      returnValue: Stream<_i5.SparkUser>.empty()) as _i4.Stream<_i5.SparkUser>);
  @override
  _i4.Stream<_i5.SparkUser> getPartner(_i5.SparkUser? user) =>
      (super.noSuchMethod(Invocation.method(#getPartner, [user]),
              returnValue: Stream<_i5.SparkUser>.empty())
          as _i4.Stream<_i5.SparkUser>);
  @override
  _i4.Future<void> signUpEmail(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#signUpEmail, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> authenticateEmail(String? email, String? password) => (super
      .noSuchMethod(Invocation.method(#authenticateEmail, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> authenticateEmailLink(String? email) =>
      (super.noSuchMethod(Invocation.method(#authenticateEmailLink, [email]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> authenticateApple() =>
      (super.noSuchMethod(Invocation.method(#authenticateApple, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.UserCredential> authenticateFacebook() =>
      (super.noSuchMethod(Invocation.method(#authenticateFacebook, []),
              returnValue:
                  Future<_i2.UserCredential>.value(_FakeUserCredential_0()))
          as _i4.Future<_i2.UserCredential>);
  @override
  _i4.Future<_i2.UserCredential> authenticateGoogle() =>
      (super.noSuchMethod(Invocation.method(#authenticateGoogle, []),
              returnValue:
                  Future<_i2.UserCredential>.value(_FakeUserCredential_0()))
          as _i4.Future<_i2.UserCredential>);
  @override
  _i4.Future<void> updateProfilePictureURI(String? uri) =>
      (super.noSuchMethod(Invocation.method(#updateProfilePictureURI, [uri]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> linkEmail(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#linkEmail, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirebasePicturesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebasePicturesRepository extends _i1.Mock
    implements _i6.FirebasePicturesRepository {
  MockFirebasePicturesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> fetchProfilePictureURL(_i5.SparkUser? user) =>
      (super.noSuchMethod(Invocation.method(#fetchProfilePictureURL, [user]),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<String> uploadProfilePicture(
          _i5.SparkUser? user, _i7.ImageSource? src) =>
      (super.noSuchMethod(Invocation.method(#uploadProfilePicture, [user, src]),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<void> clearProfilePicture(_i5.SparkUser? user) =>
      (super.noSuchMethod(Invocation.method(#clearProfilePicture, [user]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
